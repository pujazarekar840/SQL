1.In java, string is basically an object that represents sequence of char values. An array of characters works same as java 
string. 

For example:
A. char[] ch={'j','a','v','a','t','p','o','i','n','t'};  
B. String s=new String(ch);  
C. String s="javatpoint";  

2.Java String class provides a lot of methods to perform operations on string such as compare(), concat(), equals(), split(),
length(), replace(), compareTo(), intern(), substring() etc.

3.The java.lang.String class implements Serializable, Comparable and CharSequence interfaces.

4.Generally, string is a sequence of characters. But in java, string is an object that represents a sequence of characters.
 The java.lang.String class is used to create string object.

5. ways to create object:
  5.1 By String literal
  5.2 By new keyword

6. String objects are stored in a special memory area known as "string constant pool".

7 Eg:
public class StringExample{  
public static void main(String args[]){  
String s1="java";//creating string by java string literal  
char ch[]={'s','t','r','i','n','g','s'};  
String s2=new String(ch);//converting char array to string  
String s3=new String("example");//creating java string by new keyword  
System.out.println(s1);  
System.out.println(s2);  
System.out.println(s3);  
}}  

8.In java, string objects are immutable. Immutable simply means unmodifiable or unchangeable.Once string object is created
 its data or state can't be changed but a new string object is created.

Eg:1
class Testimmutablestring{  
 public static void main(String args[]){  
   String s="Sachin";  
   s.concat(" Tendulkar");//concat() method appends the string at the end  
   System.out.println(s);//will print Sachin because strings are immutable objects  
 }  
}  

Eg:2
class Testimmutablestring1{  
 public static void main(String args[]){  
   String s="Sachin";  
   s=s.concat(" Tendulkar");  
   System.out.println(s);  
 }  
} 
Here still sachin object is not modifie.

Note: Because java uses the concept of string literal.Suppose there are 5 reference variables,all referes to one object 
"sachin".If one reference variable changes the value of the object, it will be affected to all the reference variables. 
That is why string objects are immutable in java.

10. String compare:
- We can compare string in java on the basis of content and reference.It is used in authentication (by equals() method), 
  sorting (by compareTo() method), reference matching (by == operator) etc.
- There are three ways to compare string in java:
   A. By equals() method
   B. By = = operator
   C. By compareTo() method

eg:1
class Teststringcomparison1{  
 public static void main(String args[]){  
   String s1="Sachin";  
   String s2="Sachin";  
   String s3=new String("Sachin");  
   String s4="Saurav";  
   System.out.println(s1.equals(s2));//true  
   System.out.println(s1.equals(s3));//true  
   System.out.println(s1.equals(s4));//false  
 }  
}  

eg:2
class Teststringcomparison2{  
 public static void main(String args[]){  
   String s1="Sachin";  
   String s2="SACHIN";  
  
   System.out.println(s1.equals(s2));//false  
   System.out.println(s1.equalsIgnoreCase(s3));//true  
 }  
} 

eg:3
class Teststringcomparison3{  
 public static void main(String args[]){  
   String s1="Sachin";  
   String s2="Sachin";  
   String s3=new String("Sachin");  
   System.out.println(s1==s2);//true (because both refer to same instance)  
   System.out.println(s1==s3);//false(because s3 refers to instance created in nonpool)  
 }  
}

eg:4
A.s1 == s2 :0
B.s1 > s2   :positive value
C.s1 < s2   :negative value

class Teststringcomparison4{  
 public static void main(String args[]){  
   String s1="Sachin";  
   String s2="Sachin";  
   String s3="Ratan";  
   System.out.println(s1.compareTo(s2));//0  
   System.out.println(s1.compareTo(s3));//1(because s1>s3)  
   System.out.println(s3.compareTo(s1));//-1(because s3 < s1 )  
 }  
}






