CREATE TABLE PRODUCT
(PID CHAR(6) NOT NULL,
PDESC VARCHAR(100) NOT NULL,
PRICE DECIMAL(18,2) NOT NULL CHECK(PRICE > 0),
CATEGORY CHAR(4) NOT NULL CHECK (CATEGORY IN ('SHIRT','PANT','INNERS','T-SHIRT','HOODIES','JOGGERS')),
SID CHAR(6) NOT NULL REFERENCES SUPPLIER,
PRIMARY KEY(PID)
);

USE INVENTORY;

CREATE TABLE SUPPLIER
(SID CHAR(6) NOT NULL,
SNAME VARCHAR(100) NOT NULL,
SADD VARCHAR(150) NOT NULL,
SCITY CHAR(10)NOT NULL,
SPHONE CHAR(10) UNIQUE,
EMAIL VARCHAR(100),
PRIMARY KEY (SID)
);


CREATE TABLE PRODUCT
(PID CHAR(6) NOT NULL,
PDESC VARCHAR(100) NOT NULL,
PRICE DECIMAL(18,2) NOT NULL CHECK(PRICE > 0),
CATEGORY CHAR(20) NOT NULL CHECK (CATEGORY IN ('SHIRT','PANT','INNERS','T-SHIRT','HOODIES','JOGGERS')),
SID CHAR(6) NOT NULL REFERENCES SUPPLIER,
PRIMARY KEY(PID)
);

DROP TABLE CUST
CREATE TABLE CUST
( CID CHAR(6) NOT NULL,
CNAME VARCHAR(100) NOT NULL,
ADDRESS VARCHAR(100) NOT NULL,
CITY VARCHAR(80) NOT NULL,
PHONE CHAR(10) NOT NULL,
EMAIL VARCHAR(100) NOT NULL,
DOB DATE  NOT NULL CHECK (DOB < '1-JAN-2020')
PRIMARY KEY(CID)
);

CREATE TABLE ORDERS
(OID CHAR(6) NOT NULL,
ODATE DATE,
CID CHAR(6) NOT NULL REFERENCES CUST,
PID CHAR(6) NOT NULL REFERENCES PRODUCT,
OQTY INT NOT NULL CHECK(OQTY >=1)
PRIMARY KEY (OID));

ALTER TABLE CUST ADD CONSTRAINT PKCID PRIMARY KEY (CID);

CREATE TABLE STOCK
( PID CHAR(6) REFERENCES PRODUCT,
SQTY INT CHECK(SQTY >=0),
ROL INT CHECK (ROL>0),
MOQ INT CHECK(MOQ>=5));

INSERT INTO SUPPLIER VALUES (2,'DFRNT CLOTHING',' ANAND ROAD,MALAD','MUMBAI','02228887930','info@getdfrnt.COM');
INSERT INTO SUPPLIER VALUES (3,'W . W . GARMENR',' KIDWAI ROAD,WADALA','MUMBAI','7498228886','wwgarment@gmail.com');
INSERT INTO SUPPLIER VALUES (4,'GOOGLE PLUS',' KIDWAI ROAD,WADALA','MUMBAI','9152294823','google@gmail.com');
INSERT INTO SUPPLIER VALUES (5,'S.K.TRANSPORT SERVICE',' KAKDE CHOWK,BIBVEWADI','PUNE','9421013799','sk942@gmail.com');
INSERT INTO SUPPLIER VALUES (6,'BHAGAT TRANSPORT SERVICE',' SASWAT ROAD,MANTARWADI','PUNE','9881683957','bhagat@gmail.com');
INSERT INTO SUPPLIER VALUES (7,'SHADAB BHAI',' S.V.ROAD,OLD KHAR','MUMBAI','7208656421','shdab@gmail.com');
INSERT INTO SUPPLIER VALUES (8,'U.F.FASHION',' R.K.KIDWAI ROAD,WADALA','MUMBAI','7208656488','jabbarkhan@gmail.com');
INSERT INTO SUPPLIER VALUES (9,'ALASKA JEANS',' SEWREE CROSS ROAD,WADALA','MUMBAI','7666580310','alashka@gmail.com');
INSERT INTO SUPPLIER VALUES (10,'Ambika',' nare','pune','9373984931','vinit@gmail.com');

USE INVENTORY1

INSERT INTO PRODUCT VALUES (15,'DESIGNER',900,'SHIRT',6);


ALTER TABLE PRODUCT 
ALTER COLUMN CATEGORY VARCHAR (100) 

ALTER TABLE PRODUCT
ALTER COLUMN CATEGORY 

ALTER TABLE PRODUCT
ADD CONSTRAINT CK__PRODUCT__CATEGOR CHECK (CATEGORY IN ('SHIRT', 'PANT', 'T-SHIRT',
'INNERS', 'TRACKPANT'));

SELECT * FROM PRODUCT;
****************************************
USE INVENTORY1

INSERT INTO CUST VALUES (10,'ganesh','somatne phata','pune','9834382835','zganesh98@gmail.com','15-march-1993');


ALTER TABLE PRODUCT 
ALTER COLUMN CATEGORY VARCHAR (100) 

ALTER TABLE PRODUCT
ALTER COLUMN CATEGORY 

ALTER TABLE PRODUCT
ADD CONSTRAINT CK__PRODUCT__CATEGOR CHECK (CATEGORY IN ('SHIRT', 'PANT', 'T-SHIRT',
'INNERS', 'TRACKPANT'));

SELECT * FROM cust;
**********************************************
INSERT INTO ORDERS VALUES (5,'20-NOV-2020',5,5,50);
SELECT * FROM ORDERS;
**********************************************
INSERT INTO STOCK  VALUES (10,150,400,37);
SELECT * FROM STOCK;




CREATE FUNCTION GENID (@C AS CHAR(1), @X AS INT)
RETURNS CHAR(6)
AS
BEGIN
	DECLARE @ID AS CHAR(6);
	SELECT @ID = CASE 
					WHEN @X < 10 THEN CONCAT (@C,'0000', @X)
					WHEN @X < 100 THEN CONCAT (@C,'000', @X)
					WHEN @X < 1000 THEN CONCAT (@C,'00', @X)
					WHEN @X < 10000 THEN CONCAT (@C,'0', @X)
					WHEN @X < 100000 THEN CONCAT (@C, @X)
					ELSE 'NA'
	END;
	RETURN @ID;
END;

CREATE SEQUENCE SQUENC_SUP
AS INT
START WITH 1
INCREMENT BY 1;
DROP PROCEDURE ADDSUPPLIER
CREATE PROCEDURE ADDSUPPLIER @N AS VARCHAR(100), @ADD AS VARCHAR(150), @CITY AS VARCHAR(10), @PHN AS CHAR(10), @MAIL AS VARCHAR(100)
AS
BEGIN
	DECLARE @I AS CHAR (6);
	DECLARE @NO AS INT;

	SET @NO = (NEXT VALUE FOR SQUENC_SUP);

	SET @I = DBO.GENID('S', @NO);

	INSERT INTO DBO.SUPPLIER
	VALUES (@I, @N, @ADD, @CITY, @PHN, @MAIL);

	SELECT * FROM DBO.SUPPLIER WHERE SID = @I;
END;

CREATE SEQUENCE SQUENC_CUST
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDCUST @N AS VARCHAR(100), @ADD AS VARCHAR(100), @CITY AS VARCHAR(80),@PHONE AS CHAR(10), @MAIL VARCHAR(100), @DOB AS DATE 
AS
BEGIN
	DECLARE @I AS CHAR (6);
	DECLARE @NO AS INT;

	SET @NO = (NEXT VALUE FOR SQUENC_CUST);
	SET @I = DBO.GENID('C', @NO);

	INSERT INTO DBO.CUST
	VALUES (@I , @N, @ADD, @CITY, @PHONE, @MAIL, @DOB );

	SELECT * FROM DBO.CUST WHERE CID = @I;
END;


CREATE SEQUENCE SQUENC_PRODUCT
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDPRO @DESC AS VARCHAR(100), @PRICE AS DECIMAL(18,2), @CATEGORY AS VARCHAR(50),@SID AS CHAR(6)
AS
BEGIN
	DECLARE @I AS CHAR (6);
	DECLARE @NO AS INT;

	SET @NO = (NEXT VALUE FOR SQUENC_PRODUCT);
	SET @I = DBO.GENID('P', @NO);

	INSERT INTO DBO.PRODUCT
	VALUES (@I, @DESC, @PRICE, @CATEGORY, @SID );

	SELECT * FROM DBO.PRODUCT WHERE SID = @I;
END;



CREATE SEQUENCE SQUENC_ORDER
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDORDER @CID AS CHAR(6), @PID AS CHAR(6), @QNTY AS INT 
AS
BEGIN
	DECLARE @I AS CHAR (6);
	DECLARE @NO AS INT;
	DECLARE @D AS DATE;

	SET @NO = (NEXT VALUE FOR SQUENC_ORDER);
	SET @D = GETDATE()
	SET @I = DBO.GENID('O', @NO);

	INSERT INTO DBO.ORDERS
	VALUES (@I , @D, @CID, @PID, @QNTY );
	SELECT * FROM DBO.ORDERS WHERE OID = @I;
END;





CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	set nocount on;
	UPDATE STOCK SET SQTY = SQTY - (SELECT OQTY FROM INSERTED)
	WHERE PID = (SELECT PID FROM INSERTED);
END;

DROP TRIGGER TR_IN_ORD;
CREATE TRIGGER TR_DEL_PRO
ON PRODUCT
FOR DELETE 
AS
BEGIN 
	DELETE FROM STOCK WHERE PID = (SELECT PID FROM DELETED);
END;

CREATE TRIGGER TR_UP_ORD
ON ORDERS
FOR UPDATE
AS
BEGIN
	DECLARE @OQ AS INT;
	DECLARE @NQ AS INT;

	SET @OQ = (SELECT OQTY FROM DELETED);
	SET @NQ = (SELECT OQTY FROM INSERTED);

	UPDATE STOCK SET SQTY = SQTY + @OQ - @NQ
	WHERE PID = (SELECT PID FROM INSERTED);

END;

CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	
	DECLARE @QR AS INT;
	DECLARE @QS AS INT;
	
	SET @QR = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
	
	IF @QS >= @QR	
		
		BEGIN
			UPDATE STOCK SET SQTY = SQTY - @QR
			WHERE PID = (SELECT PID FROM INSERTED);

			COMMIT;
			PRINT ('ORDER ACCEPTED');
		END;
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('INSUFFICIENT QUANTITY ORDER REJECTED');
		END;
END;





